<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on sysid blog</title>
    <link>/blog/development/</link>
    <description>Recent content in development on sysid blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2022, sysid.</copyright>
    <lastBuildDate>Mon, 11 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/blog/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bkmr reborn</title>
      <link>/bkmr-reborn/</link>
      <pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>/bkmr-reborn/</guid>
      <description>Streamlining Developer Productivity Store it, find it, act on it.
Developers know the struggle: You&amp;rsquo;re deep into concentration when suddenly you need that specific command, website, or snippet you used weeks ago.
However, what should have been a quick retrieval turns into a disruptive search.
There are many tools, which individually address this issue. But rarely provide a holistic solution.
The Challenge We face a common set of challenges when working with information:</description>
    </item>
    
    <item>
      <title>Why Rust is comdemned to succeed.</title>
      <link>/why-rust-is-comdemned-to-succeed./</link>
      <pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>/why-rust-is-comdemned-to-succeed./</guid>
      <description>If you want something done right, automate it.
Rust is condemned to succeed! rust&amp;rsquo;s globla code base is tiny compared to almost everthing else, case in point C++ and C
but it is memory safe
and equally performant
and at least as expressive
it has super high quality compiler feedback
this makes it a perfect match for coding agents which loop until the succeed
the high quality compiler feedback is key, agents can converge to a good solution</description>
    </item>
    
    <item>
      <title>How Claude Code Saved My Weekend</title>
      <link>/how-claude-code-saved-my-weekend/</link>
      <pubDate>Sat, 26 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>/how-claude-code-saved-my-weekend/</guid>
      <description>If you want something done right, automate it.
Modern Open-Source Maintenance As the maintainer of sse-starlette, my GitHub notifications rarely bring me joy on a lazy Saturday afternoon.
This weekend, I decided to push Claude Code a little bit, hoping to save precious summer time.
Issue #140 didn&amp;rsquo;t just look interesting; it appeared non-trivial, touching on asyncio intricacies, multi-threading, and event-loop handling—elements that typically guarantee headaches.
Rather than my usual deep-dive session of debugging and refactoring, I handed the reins to Claude Code, eager to see if it could manage the problem.</description>
    </item>
    
    <item>
      <title>rsnip</title>
      <link>/rsnip/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/rsnip/</guid>
      <description>Fast, Reliable, Yours: Why Snippets Outshine LLMs for boring Tasks While large language models (LLMs) like ChatGPT are revolutionizing workflows with their smart completions and contextual insights, you don’t want to re-research a command or script every time you need it.
Why does a good snippet manager still matter? Even in an age of intelligent assistants, there’s a compelling case for a specialized and fast snippet manager:
Speed: LLMs are slow when it comes to re-fetching familiar snippets.</description>
    </item>
    
  </channel>
</rss>
