<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust on sysid blog</title>
    <link>/blog/rust/</link>
    <description>Recent content in rust on sysid blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2022, sysid.</copyright>
    <lastBuildDate>Mon, 11 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="/blog/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bkmr reborn</title>
      <link>/bkmr-reborn/</link>
      <pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>/bkmr-reborn/</guid>
      <description>Streamlining Developer Productivity Store it, find it, act on it.
Developers know the struggle: You&amp;rsquo;re deep into concentration when suddenly you need that specific command, website, or snippet you used weeks ago.
However, what should have been a quick retrieval turns into a disruptive search.
There are many tools, which individually address this issue. But rarely provide a holistic solution.
The Challenge We face a common set of challenges when working with information:</description>
    </item>
    
    <item>
      <title>Why Rust is comdemned to succeed.</title>
      <link>/why-rust-is-comdemned-to-succeed./</link>
      <pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>/why-rust-is-comdemned-to-succeed./</guid>
      <description>If you want something done right, automate it.
Rust is condemned to succeed! rust&amp;rsquo;s globla code base is tiny compared to almost everthing else, case in point C++ and C
but it is memory safe
and equally performant
and at least as expressive
it has super high quality compiler feedback
this makes it a perfect match for coding agents which loop until the succeed
the high quality compiler feedback is key, agents can converge to a good solution</description>
    </item>
    
    <item>
      <title>rsnip</title>
      <link>/rsnip/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/rsnip/</guid>
      <description>Fast, Reliable, Yours: Why Snippets Outshine LLMs for boring Tasks While large language models (LLMs) like ChatGPT are revolutionizing workflows with their smart completions and contextual insights, you don’t want to re-research a command or script every time you need it.
Why does a good snippet manager still matter? Even in an age of intelligent assistants, there’s a compelling case for a specialized and fast snippet manager:
Speed: LLMs are slow when it comes to re-fetching familiar snippets.</description>
    </item>
    
    <item>
      <title>Rewriting a Vim Plugin in Rust: vimania-uri-rs</title>
      <link>/rewriting-a-vim-plugin-in-rust-vimania-uri-rs/</link>
      <pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>/rewriting-a-vim-plugin-in-rust-vimania-uri-rs/</guid>
      <description>Advanced URI Handling for the Modern Vim User
Why? Vim&amp;rsquo;s native gx command is somehow limited in its flexibility and capabilities. I wanted more powerful URI handling capabilities, which led me to create vimania-uri, a Vim plugin designed to provide advanced URI management within Vim.
However, while the plugin achieved its goal in terms of functionality, it came with a performance penalty: the initial loading of the plugin&amp;rsquo;s Python dependencies severely impacted Vim&amp;rsquo;s startup times.</description>
    </item>
    
    <item>
      <title>Elevating Bookmark Management with AI-Driven Semantic Search</title>
      <link>/elevating-bookmark-management-with-ai-driven-semantic-search/</link>
      <pubDate>Sun, 14 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/elevating-bookmark-management-with-ai-driven-semantic-search/</guid>
      <description>Search has been revolutionized by AI, bringing &amp;lsquo;Google-level&amp;rsquo; quality within the reach of everybody.
Introduction Finding information is one of the most important capabilities for any professional.
bkmr introduced a CLI Bookmark Manager leveraging SQLite&amp;rsquo;s full-text search (FTS) capabilities, offering improved search efficiency. This tool, developed in Rust, aimed to provide snappy bookmark manager capabilities for the command line.
However, the landscape of search has changed radically. Traditional keyword-based searches, while effective, fall short in understanding the context and semantics behind user queries.</description>
    </item>
    
    <item>
      <title>Hierarchical Environment Variable Management</title>
      <link>/hierarchical-environment-variable-management/</link>
      <pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/hierarchical-environment-variable-management/</guid>
      <description>I still spend too much time managing environment variables!
The &amp;ldquo;Twelve-Factor&amp;rdquo; methodology prescribes that cloud-native applications should be configured via environment variables.
This recommendation separates configuration from code, which is essential for scalability and security. But it also results in an extensive array of environment variables.
Having to manage these variables for test, integration, end-to-end, and production environments becomes a daunting task. Often, these variable sets intersect. For instance, while Github credentials might be consistent across all environments, AWS accounts may vary.</description>
    </item>
    
    <item>
      <title>Linear Optimization in time-critical Control Loop</title>
      <link>/linear-optimization-in-time-critical-control-loop/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/linear-optimization-in-time-critical-control-loop/</guid>
      <description>Problem Given a start and endpoint, find the eager and lazy path from start to end.
Model The visualization translates to a simple rhombus (German: Raute) where the enclosed area is to be maximized.
The task is to find the corner points A, B, C, D, of the Raute.
There is a twist, however. The points must be contained within a &amp;ldquo;valid&amp;rdquo; area, whereas start and endpoint may lie outside.</description>
    </item>
    
    <item>
      <title>bkmr</title>
      <link>/bkmr/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/bkmr/</guid>
      <description>Super fast CLI Bookmark Manager and Launcher
Developer Productivity in Rust vs Python I am aware that this is a complex subject and impossible to treat objectively, especially given my time limit of 3 weeks.
In order to compare apples with apples I decided to re-implement a Python productivity application in Rust, which I use on a daily basis:
CLI bookmark manager with fulltext search capability: twbm.
Objectives: Learn Rust and it&amp;rsquo;s idioms Get an idea of developer productivity in Rust vs Python Get an understanding of Rust&amp;rsquo;s capabilities and ecosystem Better performance for a frequently used CLI tool Approach: 1-to-1 translation of Python CLI bookmark manager twbm to Rust.</description>
    </item>
    
  </channel>
</rss>
