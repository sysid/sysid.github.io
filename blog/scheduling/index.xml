<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scheduling on sysid blog</title>
    <link>/blog/scheduling/</link>
    <description>Recent content in scheduling on sysid blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2022, sysid.</copyright>
    <lastBuildDate>Wed, 06 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="/blog/scheduling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scheduling</title>
      <link>/scheduling/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/scheduling/</guid>
      <description>I already analysed several scheduling problems:
Task Scheduling Task Scheduling with limited Resources Job Shop Scheduling Problem Patient Scheduling The class of scheduling problems is interesting and every example provides new insight. Here I am going to look at two problems which can be solved with a very similar and quite common approach: The continuous time model approach.
Problem 1: Machine Scheduling Schedule jobs onto available machines so, that the total processing time (a.</description>
    </item>
    
    <item>
      <title>Job Shop Scheduling Problem</title>
      <link>/job-shop-scheduling-problem/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/job-shop-scheduling-problem/</guid>
      <description>The Job Shop Scheduling Problem (JSSP) is an NP-hard problem. 1
The JSSP is defined by a set of jobs that must be executed by a set of machines in a specific order for each job. Each job has a defined execution time for each machine and a defined processing order of machines. Also, each job must use each machine only once. The machines can only execute a job at a time and once started, the machine cannot be interrupted until the completion of the assigned job.</description>
    </item>
    
    <item>
      <title>Task Scheduling with limited Resources</title>
      <link>/task-scheduling-with-limited-resources/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/task-scheduling-with-limited-resources/</guid>
      <description>We already looked at a simple scheduling problem: Task Scheduling.
Here we are looking at a more elaborated scheduling example with limited resources for tasks with various durations. We want to get insights by re-engineering the solution of 1 with Pyomo.
Problem We have \(N\) tasks and \(M\) facilities to execute the tasks. Every task has a due date. Tasks require certain resources for execution, e.g. water, electricity, &amp;hellip; Every facility provides a set of resources Only one task per resource can be executed at a given time.</description>
    </item>
    
    <item>
      <title>Task Scheduling</title>
      <link>/task-scheduling/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/task-scheduling/</guid>
      <description>We already looked at a real world scheduling problem: Patient Scheduling.
Important concepts have been touched there. Here we look at additional aspects of this important optimization domain, especially in using Pyomo as modelling environment.
Simple Scheduling Problem Schedule 10 tasks. Each task must be assigned to a single time slot, however, not every time slot is viable. The duration of a task is one timeslot. We want to minimize the number of timeslots used.</description>
    </item>
    
    <item>
      <title>Patient Scheduling</title>
      <link>/patient-scheduling/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/patient-scheduling/</guid>
      <description>How to optimize the scheduling of patients in order to use the necessary infrastructure, i.e. infusion chairs optimally.
Problem Parameters 1: There are \(T = 40\) time slots of 15 minutes We have 23 infusion chairs for patient treatment We have 8 different types of patients Each patient type has a demand (number of patients) and treatment length (expressed in 15 minute slots) No treatments can start during lunch break At most 2 treatments can start in each time slot.</description>
    </item>
    
  </channel>
</rss>
