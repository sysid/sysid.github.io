{"version":3,"sources":["routes/posts/2019-11-02-munggoggo/document.mdx","routes/posts/2019-11-02-munggoggo/document.module.css"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_tw_dev_sysid_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","className","styles","Document","parentName","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","href","id","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter","module","exports"],"mappings":"oTAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,IAAIC,KAAO,MAAOC,MAAQ,KAS9EC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,OAAKK,UAAWC,IAAOC,UACrBP,OAAAE,EAAA,EAAAF,CAAA,sFACAA,OAAAE,EAAA,EAAAF,CAAA,kPAGAA,OAAAE,EAAA,EAAAF,CAAA,oJAEAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMK,WAAW,OAAU,CAC5BH,UAAa,kBACbI,gBAAiB,SACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,k7JAGhBZ,OAAAE,EAAA,EAAAF,CAAA,2BAAsBA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGK,WAAW,KAAQ,CACxCK,KAAQ,gDADU,+CAEkCb,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAFvE,gBAGQR,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGK,WAAW,KAAQ,CAC1BK,KAAQ,uCADJ,uCAGRb,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNc,GAAM,OADR,OAGAd,OAAAE,EAAA,EAAAF,CAAA,kEACAA,OAAAE,EAAA,EAAAF,CAAA,0OAGAA,OAAAE,EAAA,EAAAF,CAAA,kSAGAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNc,GAAM,2BADR,2BAGAd,OAAAE,EAAA,EAAAF,CAAA,yEACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,uGACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,yFACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,oDACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,iCACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,oDACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,gBAEFR,OAAAE,EAAA,EAAAF,CAAA,uCACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,oJAEAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,kKAEAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,gFACAR,OAAAE,EAAA,EAAAF,CAAA,MAAIQ,WAAW,MAAf,oFAEFR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNc,GAAM,wBADR,wBAGAd,OAAAE,EAAA,EAAAF,CAAA,oQAGAA,OAAAE,EAAA,EAAAF,CAAA,0HACAA,OAAAE,EAAA,EAAAF,CAAA,uKAONJ,EAAWmB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,CAChD,CACEH,GAAI,MACJM,MAAO,EACPC,MAAO,MACPC,SAAU,IAId,CACIR,GAAI,0BACJM,MAAO,EACPC,MAAO,0BACPC,SAAU,IAId,CACIR,GAAI,uBACJM,MAAO,EACPC,MAAO,uBACPC,SAAU,MAMDC,EAAc,uBCnH3BC,EAAAC,QAAA,CAAkBlB,SAAA","file":"static/js/8.6908a782.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.2,\"time\":132000,\"words\":440}\n/* @jsx mdx */\nimport styles from './document.module.css'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <div className={styles.Document}>\n      <p>{`An asyncio based agent platform written in Python and based on RabbitMQ. `}</p>\n      <p>{`Agents are isolated processes which can host multiple parallel running behaviours implementing business\nlogic and can be deployed as independent kubernetes pods. Access to the agent mesh is via\nREST/HTTP, websocket and jsonrpc.`}</p>\n      <p>{`A few lines of code implement a fully fledged agent with a simple behaviour: sending and\nreceiving ping messages to/from other agents.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-python\",\n          \"data-language\": \"python\",\n          \"data-highlighted-line-numbers\": \"\",\n          \"dangerouslySetInnerHTML\": {\n            \"__html\": \"<span class=\\\"token keyword\\\">from</span> mode <span class=\\\"token keyword\\\">import</span> Worker\\n<span class=\\\"token keyword\\\">from</span> behaviour <span class=\\\"token keyword\\\">import</span> Behaviour\\n<span class=\\\"token keyword\\\">from</span> core <span class=\\\"token keyword\\\">import</span> Core\\n\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Agent</span><span class=\\\"token punctuation\\\">(</span>Core<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PingBehav</span><span class=\\\"token punctuation\\\">(</span>Behaviour<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            self<span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n\\n        <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            self<span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span>\\n            msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> self<span class=\\\"token punctuation\\\">.</span>receive<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">if</span> msg<span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>self<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">: Message received: </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>msg<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span>decode<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">await</span> self<span class=\\\"token punctuation\\\">.</span>publish<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'ping'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">await</span> asyncio<span class=\\\"token punctuation\\\">.</span>sleep<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0.9</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span> <span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token triple-quoted-string string\\\">\\\"\\\"\\\" Register behaviour and subscribe to 'ping' topic \\\"\\\"\\\"</span>\\n        <span class=\\\"token keyword\\\">await</span> self<span class=\\\"token punctuation\\\">.</span>add_runtime_dependency<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>PingBehav<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> binding_keys<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'ping'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\n<span class=\\\"token keyword\\\">if</span> __name__ <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">'__main__'</span><span class=\\\"token punctuation\\\">:</span>\\n    Worker<span class=\\\"token punctuation\\\">(</span>Agent<span class=\\\"token punctuation\\\">(</span>identity<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'AgentIdentity'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> loglevel<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"info\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>execute_from_commandline<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n          }\n        }}></code></pre>\n      <p>{`Documentation: `}<a parentName=\"p\" {...{\n          \"href\": \"https://munggoggo.readthedocs.io/en/latest/\"\n        }}>{`https://munggoggo.readthedocs.io/en/latest/`}</a><br parentName=\"p\"></br>{`\n`}{`Github: `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/sysid/munggoggo\"\n        }}>{`https://github.com/sysid/munggoggo`}</a></p>\n      <h2 {...{\n        \"id\": \"why\"\n      }}>{`Why`}</h2>\n      <p>{`The physical world forms a massive parallel system.  `}</p>\n      <p>{`The metaphor of software agents communicating via messages helps to model this realty.\nDevices like cars, buildings, etc. can be interpreted as independently acting\nagents communicating via message protocols like AMQP. `}</p>\n      <p>{`Today’s software technology has evolved far enough to model this reality without access to supercomputers or\nhighly specialized programming paradigms. Agents running async business logic are a suitable fit and\ncan be implemented with various prevalent technology stacks.`}</p>\n      <h2 {...{\n        \"id\": \"technology-stack-choice\"\n      }}>{`Technology Stack Choice`}</h2>\n      <p>{`Requirements for our tech stack, driven by business reality:`}</p>\n      <ol>\n        <li parentName=\"ol\">{`very fast turnover and implementation cycles (experiment, learn, extract useful part, repeat…)`}</li>\n        <li parentName=\"ol\">{`focus on data driven models and algorithms, based on IoT data streams (e.g. vehicles)`}</li>\n        <li parentName=\"ol\">{`loose coupling and independent entity modelling `}</li>\n        <li parentName=\"ol\">{`cloud first (of course…)`}</li>\n        <li parentName=\"ol\">{`standards based and seamless systems integration`}</li>\n        <li parentName=\"ol\">{`scalability`}</li>\n      </ol>\n      <p>{`For us this translated in:`}</p>\n      <ol>\n        <li parentName=\"ol\">{`Python as programming language wich allows quick development cycles and has got a well established footprint\nin data science and data computing`}</li>\n        <li parentName=\"ol\">{`Messaging backend based on AMQP (RabbitMQ) which supports streamning programming while simultaniously allows\nsophisticated routing and communication patterns`}</li>\n        <li parentName=\"ol\">{`Async programming paradigm in order to fully capitalize on stream processing`}</li>\n        <li parentName=\"ol\">{`Agent metaphor for independent computing units exposing one ore more behaviours`}</li>\n      </ol>\n      <h2 {...{\n        \"id\": \"bringing-it-together\"\n      }}>{`Bringing it together`}</h2>\n      <p>{`Combining these ideas, reviewing existing solutions and including a few original ideas\neventually led to this prototype implementation of a behavioural agent software framework based on async python, RabbitMQ and\nASGI as web programming model.  `}</p>\n      <p>{`It is a personal PoC at the moment rather than production ready software and its potential is to be verified.`}</p>\n      <p>{`In any case it demonstrates some interesting ideas to tackle the described problem domain and combines some of the latest\npython programming paradigms.`}</p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"why\",\n    level: 2,\n    title: \"Why\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"technology-stack-choice\",\n    level: 2,\n    title: \"Technology Stack Choice\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bringing-it-together\",\n    level: 2,\n    title: \"Bringing it together\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Document\":\"document_Document__NswW2\"};"],"sourceRoot":""}